{"ast":null,"code":"import _objectWithoutProperties from \"/Users/sid/Desktop/infinitescroll/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sid/Desktop/infinitescroll/src/components/Markdown.js\";\nimport React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return {\n    listItem: {\n      marginTop: theme.spacing.unit\n    }\n  };\n};\n\nvar options = {\n  overrides: {\n    h1: {\n      component: function component(props) {\n        return React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"h4\"\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      }\n    },\n    h2: {\n      component: function component(props) {\n        return React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"h6\"\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }));\n      }\n    },\n    h3: {\n      component: function component(props) {\n        return React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"subtitle1\"\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }));\n      }\n    },\n    h4: {\n      component: function component(props) {\n        return React.createElement(Typography, Object.assign({\n          gutterBottom: true,\n          variant: \"caption\",\n          paragraph: true\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }));\n      }\n    },\n    p: {\n      component: function component(props) {\n        return React.createElement(Typography, Object.assign({\n          paragraph: true\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }\n    },\n    li: {\n      component: withStyles(styles)(function (_ref) {\n        var classes = _ref.classes,\n            props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n        return React.createElement(\"li\", {\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Typography, Object.assign({\n          component: \"span\"\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        })));\n      })\n    }\n  }\n};\n\nfunction Markdown(props) {\n  return React.createElement(ReactMarkdown, Object.assign({\n    options: options\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nexport default Markdown;","map":{"version":3,"sources":["/Users/sid/Desktop/infinitescroll/src/components/Markdown.js"],"names":["React","ReactMarkdown","withStyles","Typography","styles","theme","listItem","marginTop","spacing","unit","options","overrides","h1","component","props","h2","h3","h4","p","li","classes","Markdown"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAcC;AADnB;AADW,GAAL;AAAA,CAApB;;AAMA,IAAMC,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAE;AACPC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,eAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC;AAAjC,WAA0CA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA;AAAlB,KADG;AAEPC,IAAAA,EAAE,EAAE;AAAEF,MAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,eAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC;AAAjC,WAA0CA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA;AAAlB,KAFG;AAGPE,IAAAA,EAAE,EAAE;AAAEH,MAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,eAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC;AAAjC,WAAiDA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA;AAAlB,KAHG;AAIPG,IAAAA,EAAE,EAAE;AAAEJ,MAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,eAAI,oBAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,SAAjC;AAA2C,UAAA,SAAS;AAApD,WAAyDA,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA;AAAlB,KAJG;AAKPI,IAAAA,CAAC,EAAE;AAAEL,MAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,eAAI,oBAAC,UAAD;AAAY,UAAA,SAAS;AAArB,WAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA;AAAlB,KALI;AAMPK,IAAAA,EAAE,EAAE;AACAN,MAAAA,SAAS,EAAEX,UAAU,CAACE,MAAD,CAAV,CAAmB;AAAA,YAAGgB,OAAH,QAAGA,OAAH;AAAA,YAAeN,KAAf;;AAAA,eAC1B;AAAI,UAAA,SAAS,EAAEM,OAAO,CAACd,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAC;AAAtB,WAAiCQ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAD0B;AAAA,OAAnB;AADX;AANG;AADC,CAAhB;;AAiBA,SAASO,QAAT,CAAkBP,KAAlB,EAAyB;AACrB,SAAO,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEJ;AAAxB,KAAqCI,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,eAAeO,QAAf","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    listItem: {\n        marginTop: theme.spacing.unit,\n    },\n});\n\nconst options = {\n    overrides: {\n        h1: { component: props => <Typography gutterBottom variant=\"h4\" {...props} /> },\n        h2: { component: props => <Typography gutterBottom variant=\"h6\" {...props} /> },\n        h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> },\n        h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> },\n        p: { component: props => <Typography paragraph {...props} /> },\n        li: {\n            component: withStyles(styles)(({ classes, ...props }) => (\n                <li className={classes.listItem}>\n                    <Typography component=\"span\" {...props} />\n                </li>\n            )),\n        },\n    },\n};\n\nfunction Markdown(props) {\n    return <ReactMarkdown options={options} {...props} />;\n}\n\nexport default Markdown;"]},"metadata":{},"sourceType":"module"}