{"ast":null,"code":"import _classCallCheck from \"/Users/sid/Desktop/infinitescroll/infinitescroll/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sid/Desktop/infinitescroll/infinitescroll/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sid/Desktop/infinitescroll/infinitescroll/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sid/Desktop/infinitescroll/infinitescroll/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sid/Desktop/infinitescroll/infinitescroll/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sid/Desktop/infinitescroll/infinitescroll/src/components/CenterPanel.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport blue from \"@material-ui/core/colors/blue\";\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      maxWidth: 600,\n      backgroundColor: red[100]\n    },\n    actions: {\n      display: 'flex'\n    },\n    avatar: {\n      backgroundColor: red[500]\n    }\n  };\n};\n\nvar CenterPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CenterPanel, _React$Component);\n\n  function CenterPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CenterPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CenterPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: Array.from({\n        length: 20\n      }),\n      hasMore: true\n    };\n\n    _this.fetchMoreData = function () {\n      if (_this.state.items.length >= 500) {\n        _this.setState({\n          hasMore: false\n        });\n\n        return;\n      } // a fake async api call like which sends\n      // 20 more records in .5 secs\n\n\n      setTimeout(function () {\n        _this.setState({\n          items: _this.state.items.concat(Array.from({\n            length: 20\n          }))\n        });\n      }, 500);\n    };\n\n    return _this;\n  }\n\n  _createClass(CenterPanel, [{\n    key: \"renderCard\",\n    value: function renderCard() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        avatar: React.createElement(Avatar, {\n          \"aria-label\": \"Recipe\",\n          className: classes.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"R\"),\n        title: \"Shrimp and Chorizo Paella\",\n        subheader: \"September 14, 2016\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.\")), React.createElement(CardActions, {\n        className: classes.actions,\n        disableActionSpacing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Add to favorites\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(FavoriteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        \"aria-label\": \"Share\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ShareIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(InfiniteScroll, {\n        dataLength: this.state.items.length,\n        next: this.fetchMoreData,\n        hasMore: this.state.hasMore,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Loading...\"),\n        endMessage: React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Yay! You have seen it all\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.renderCard(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CenterPanel;\n}(React.Component);\n\nCenterPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CenterPanel);","map":{"version":3,"sources":["/Users/sid/Desktop/infinitescroll/infinitescroll/src/components/CenterPanel.js"],"names":["React","PropTypes","withStyles","classnames","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","InfiniteScroll","ExpandMoreIcon","MoreVertIcon","blue","styles","theme","card","maxWidth","backgroundColor","actions","display","avatar","CenterPanel","state","items","Array","from","length","hasMore","fetchMoreData","setState","setTimeout","concat","classes","props","textAlign","renderCard","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport blue from \"@material-ui/core/colors/blue\";\n\n\n\nconst styles = theme => ({\n    card: {\n        maxWidth: 600,\n        backgroundColor: red[100],\n    },\n    actions: {\n        display: 'flex',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n});\n\nclass CenterPanel extends React.Component {\n\n    state = {\n        items: Array.from({ length: 20 }),\n        hasMore: true\n    };\n\n\n    fetchMoreData = () => {\n        if (this.state.items.length >= 500) {\n            this.setState({ hasMore: false });\n            return;\n        }\n        // a fake async api call like which sends\n        // 20 more records in .5 secs\n        setTimeout(() => {\n            this.setState({\n                items: this.state.items.concat(Array.from({ length: 20 }))\n            });\n        }, 500);\n    };\n\n\n\n    renderCard() {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                                R\n                            </Avatar>\n                        }\n                        title=\"Shrimp and Chorizo Paella\"\n                        subheader=\"September 14, 2016\"\n                    />\n\n                    <CardContent>\n                        <Typography component=\"p\">\n                            This impressive paella is a perfect party dish and a fun meal to cook together with your\n                            guests. Add 1 cup of frozen peas along with the mussels, if you like.\n                        </Typography>\n                    </CardContent>\n                    <CardActions className={classes.actions} disableActionSpacing>\n                        <IconButton aria-label=\"Add to favorites\">\n                            <FavoriteIcon/>\n                        </IconButton>\n                        <IconButton aria-label=\"Share\">\n                            <ShareIcon/>\n                        </IconButton>\n\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n\n        render() {\n\n                return (\n                    <div className=\"col-md-4\">\n                    <InfiniteScroll\n                        dataLength={this.state.items.length}\n                        next={this.fetchMoreData}\n                        hasMore={this.state.hasMore}\n                        loader={<h4>Loading...</h4>}\n                        endMessage={\n                            <p style={{ textAlign: \"center\" }}>\n                                <b>Yay! You have seen it all</b>\n                            </p>\n                        }\n                    >\n\n                        {this.renderCard()}\n                        <br/>\n\n                    </InfiniteScroll>\n            </div>\n                );\n            }\n\n\n}\n\nCenterPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CenterPanel);\n"]},"metadata":{},"sourceType":"module"}